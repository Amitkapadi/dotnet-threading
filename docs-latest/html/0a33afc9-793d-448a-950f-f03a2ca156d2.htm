<html>
  <head>
    <META http-equiv="Content-Type" content="text/html; charset=utf-8">
    <link rel="shortcut icon" href="../icons/favicon.ico">
    <link rel="stylesheet" type="text/css" href="../styles/branding.css">
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css"><script type="text/javascript" src="../scripts/branding.js"></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <title>User Guide</title><meta name="Language" content="en-us">
        <meta name="Microsoft.Help.Id" content="0a33afc9-793d-448a-950f-f03a2ca156d2">
        <meta name="Description" content="This library provides improved support for writing asynchronous code targeting the .NET Framework 3.5 and newer.">
        <meta name="Microsoft.Help.ContentType" content="Concepts">
        <meta name="BrandingAware" content="'true'">
          <meta name="SelfBranded" content="true"></head><body onload="onLoad()"><header class="ux-header"><div class="header-top-bar">Threading API Reference</div></header><div class="OH_outerDiv" style="padding: 35px 20px 0 20px;">
                  <div class="OH_leftNav" id="LeftNav">
  <div id="tocnav">
    <div class="toclevel0" data-toclevel="0" style="padding-left: 0px;"><a class="toc_collapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="50d028db-e522-4750-91a6-4ae6c97c2610.htm" title="Threading API" tocid="roottoc">Threading API</a></div><div class="toclevel1 current" data-toclevel="1" style="padding-left: 13px;" data-childrenloaded="true"><a class="toc_expanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="0a33afc9-793d-448a-950f-f03a2ca156d2.htm" title="User Guide" tocid="0a33afc9-793d-448a-950f-f03a2ca156d2">User Guide</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px; display: block;"><span class="toc_empty"></span><a data-tochassubtree="false" href="3304f46f-a7d2-4af6-8b5a-11f9931ba72e.htm" title="Installation" tocid="3304f46f-a7d2-4af6-8b5a-11f9931ba72e">Installation</a></div></div></div><div id="TocResize" class="OH_TocResize"><img id="ResizeImageIncrease" src="../icons/open.gif" onclick="onIncreaseToc()" alt="Expand" title="Expand"><img id="ResizeImageReset" src="../icons/close.gif" style="display:none" onclick="onResetToc()" alt="Minimize" title="Minimize"></div><div class="OH_outerContent" id="OuterContent" style="margin-left: 280px;">
                    <h1 class="title">User Guide</h1><div id="mainSection">
                        <div id="mainBody"><span class="introStyle"></span><div class="introduction">
                              <p>
        This library provides improved support for writing asynchronous code targeting the .NET
        Framework 3.5 and newer.
      </p></div><a id="ProjectResources"></a><div class="OH_CollapsibleAreaRegion">
                                    <div class="OH_regiontitle">Project Resources</div></div><p>
          The following links go directly to the latest information available
          about the project.
        </p><ul>
                                          <li>
                                            <p>
              Latest Release: <a href="https://github.com/rackerlabs/dotnet-threading/releases/latest" title="Release notes for the latest release on GitHub" target="_blank">GitHub Releases</a></p></li><li>
                                                  <p>
              Source Code: <a href="https://github.com/rackerlabs/dotnet-threading" title="Source code for the project on GitHub" target="_blank">GitHub Repository</a></p></li><li>
                                                        <p>
              Documentation: <a href="https://rackerlabs.github.io/dotnet-threading/docs-latest" title="Documentation for the latest release hosted on GitHub Pages" target="_blank">API Documentation</a></p></li><li>
                                                              <p>
              Issue Tracker: <a href="https://github.com/rackerlabs/dotnet-threading/issues" title="Project issue tracker on GitHub Issues" target="_blank">GitHub Issues</a></p></li></ul><a id="Features"></a><div class="OH_CollapsibleAreaRegion">
                                                                      <div class="OH_regiontitle">Features</div></div><p>
          The basic features of this library can be described as the following.
        </p><ul>
                                                                            <li>
                                                                              <p><span class="term">Extensions for legacy code</span>: These extension methods provide
              select features which were added to the Task Parallel Library in .NET 4.5 as extension methods
              for .NET 3.5 and .NET 4.0 users.
            </p></li><li>
                                                                                    <p><span class="term">Extensions for task continuations</span>: These extension methods allow developers to
              write task continuations in asynchronous code that behave in similarly to
              <span class="input"><span id="ID0EADABGAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EADABGAAAABAA?vb=Async|cpp=async|cs=async|fs=async|nu=async");
				</script></span>/<span class="input"><span id="ID0EABABGAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABABGAAAABAA?vb=Await|cpp=await|cs=await|fs=let!|nu=await");
				</script></span> while maintaining
              support for .NET 3.5 and .NET 4.0.
            </p></li><li>
                                                                                                      <p><span class="term">Task building blocks</span>: These utility methods
              allow developers to write efficient asynchronous code using high-level block constructs that
              resemble the methods produced by the <span class="input"><span id="ID0EABAAGAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABAAGAAAABAA?vb=Async|cpp=async|cs=async|fs=async|nu=async");
				</script></span> keyword
              while maintaining support for .NET 3.5 and .NET 4.0.
            </p></li></ul><h4 class="subHeading">Extension Methods for Legacy Code</h4><div class="subsection">
                                                                                                                    <p>
              The .NET Framework 4.5 introduces several new methods to simplify the use of the Task Parallel
              Library in common scenarios. This library provides extension methods for some of the most
              frequently used cases, allowing use of the functionality in .NET 3.5 and .NET 4.0. These methods
              are provided by the following classes.
            </p><ul>
                                                                                                                        <li>
                                                                                                                          <p><a href="T_Rackspace_Threading_CancellationTokenSourceExtensions.htm">CancellationTokenSourceExtensions</a></p></li><li>
                                                                                                                                <p><a href="T_Rackspace_Threading_StreamExtensions.htm">StreamExtensions</a></p></li><li>
                                                                                                                                      <p><a href="T_Rackspace_Threading_WebRequestExtensions.htm">WebRequestExtensions</a></p></li></ul><p>
              In addition to the extension methods, the
              <a href="T_Rackspace_Threading_CompletedTask.htm">CompletedTask</a> class provides
              static methods and properties for cases where code needs to return a
              <a href="http://msdn2.microsoft.com/en-us/library/dd235678" target="_blank">Task</a> which has already
              entered a completed state (either successfully or canceled).
            </p></div><h4 class="subHeading">Extension Methods for Task Continuations</h4><div class="subsection">
                                                                                                                                                    <p>
              The <a href="http://msdn2.microsoft.com/en-us/library/dd235663" target="_blank">ContinueWith<span id="ID0EALCCAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EALCCAAAABAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a>
              methods provide comprehensive options for writing task continuations, but introduce a number
              of concerns regarding faulted and canceled tasks. Developers must also be careful regarding
              the use of the <a href="http://msdn2.microsoft.com/en-us/library/ee835489" target="_blank">Unwrap<span id="ID0EAJCCAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAJCCAAAABAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a>
              method. While the <span class="input"><span id="ID0EAHCCAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAHCCAAAABAA?vb=Async|cpp=async|cs=async|fs=async|nu=async");
				</script></span>/<span class="input"><span id="ID0EAFCCAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAFCCAAAABAA?vb=Await|cpp=await|cs=await|fs=let!|nu=await");
				</script></span>
              keywords introduced in C# 5 (and similar keywords in other select programming languages) provide
              a cleaner development experience, they are not available for users of earlier versions of the
              language and/or framework. This library provides extension methods to simplify the creation
              of efficient, "well-behaved" task continuations without requiring the use of
              <span class="input"><span id="ID0EADCCAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EADCCAAAABAA?vb=Async|cpp=async|cs=async|fs=async|nu=async");
				</script></span>/<span class="input"><span id="ID0EABCCAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABCCAAAABAA?vb=Await|cpp=await|cs=await|fs=let!|nu=await");
				</script></span>.
            </p><p>
              Each of the extension methods provided by this library is implemented in a manner that
              propagates exceptions and/or cancellation closely matching the behavior of code written with
              <span class="input"><span id="ID0EAFBCAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAFBCAAAABAA?vb=Async|cpp=async|cs=async|fs=async|nu=async");
				</script></span>/<span class="input"><span id="ID0EADBCAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EADBCAAAABAA?vb=Await|cpp=await|cs=await|fs=let!|nu=await");
				</script></span>. In
              particular, care is taken to not wrap single exceptions inside multiple layers of
              <a href="http://msdn2.microsoft.com/en-us/library/dd386929" target="_blank">AggregateException</a>.
            </p><ul>
                                                                                                                                                                                                            <li>
                                                                                                                                                                                                              <p><a href="Overload_Rackspace_Threading_CoreTaskExtensions_Select.htm">Select<span id="ID0EADACACAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EADACACAAAABAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a>:
                  This extension method is intended for cases where code needs to run in-line following
                  the completion of another task (called the <span class="term">antecedent</span> task).
                </p></li><li>
                                                                                                                                                                                                                          <p><a href="Overload_Rackspace_Threading_CoreTaskExtensions_Then.htm">Then<span id="ID0EAHABACAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAHABACAAAABAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a>:
                  This extension method is intended for cases where another
                  <a href="http://msdn2.microsoft.com/en-us/library/dd235678" target="_blank">Task</a> needs to run following
                  the completion of an antecedent task. The extension method automatically calls
                  <a href="http://msdn2.microsoft.com/en-us/library/ee835489" target="_blank">Unwrap<span id="ID0EADABACAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EADABACAAAABAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a>,
                  providing an experience similar to using the <span class="input"><span id="ID0EABABACAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABABACAAAABAA?vb=Await|cpp=await|cs=await|fs=let!|nu=await");
				</script></span> keyword
                  on the call.
                </p></li><li>
                                                                                                                                                                                                                                                  <p><a href="Overload_Rackspace_Threading_CoreTaskExtensions_Finally.htm">Finally<span id="ID0EAFAAACAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAFAAACAAAABAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a>:
                  This extension method is intended for cases where cleanup code needs to run following the
                  completion of an antecedent task, regardless of whether the antecedent succeeded, faulted, or
                  was canceled. Much like a <span class="code">finally</span> block in code, this method
                  does not alter the result provided by the antecedent task unless an exception is thrown within
                  the <span class="code">finally</span> block itself.
                </p></li></ul></div><h4 class="subHeading">Task Building Blocks</h4><div class="subsection">
                                                                                                                                                                                                                                                                  <p>
              Task building blocks provide support for block-level programming constructs in asynchronous
              code. The resulting execution resembles the behavior of the state machines created by the C#
              compiler to support the <span class="input"><span id="ID0EADAAAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EADAAAAAABAA?vb=Async|cpp=async|cs=async|fs=async|nu=async");
				</script></span>/<span class="input"><span id="ID0EABAAAAAABAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABAAAAAABAA?vb=Await|cpp=await|cs=await|fs=let!|nu=await");
				</script></span>
              keywords, but does not depend on these features being available. As a result, .NET 3.5 and
              .NET 4.0 developers can enjoy clean, efficient asynchronous code.
            </p></div></div></div></div></div><div id="OH_footer" class="OH_footer">
                                                                                                                                                                                                                                                                                  <div class="OH_feedbacklink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:sam.harwell%40rackspace.com?Subject=Threading API Reference">sam.harwell@rackspace.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div><script src="//code.jquery.com/jquery-1.11.0.min.js"></script><script type="text/javascript">$(document).ready(function () {DocumentReady();});</script></body></html>